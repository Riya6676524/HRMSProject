@model IEnumerable<HRMSModels.EmployeeModel>



@{ var grid = Html
   .Grid(Model)
   .Build(columns =>
   {
       columns.Add(model => model.EmployeeID).Titled("Employee ID").Sortable(true);
       columns.Add(model => model.FirstName).Titled("Name").Sortable(true).RenderedAs(model => $"{model.FirstName} {model.Middlename} {model.LastName}");
       columns.Add(model => model.Email).Titled("Email").Sortable(true);
       columns.Add(model => model.ContactNumber).Titled("Phone").Sortable(true);
       columns.Add(model => model.CreatedOn).Titled("Date of Joining").Sortable(true).Filterable(false).RenderedAs(model => model.CreatedOn.ToShortDateString());
       columns.Add(item => $"<a class='action-icon icon-warning' href='{Url.Action("Edit", new { id = item.EMP_ID })}'>  <i class='fa fa-edit'></i> </a>" +
       $"<a class='action-icon icon-danger delete-link' href='#' data-id='{item.EMP_ID}' data-name='{item.FirstName} {item.Middlename} {item.LastName}'>  <i class='fa-solid fa-trash'></i> </a>"
       ).Encoded(false);

   })
   .Sortable()
   .Filterable();
    if (Model.Count() > 10)
    {
        grid.Pageable(pager =>
                        {
                        pager.PageSizes = new Dictionary<int, string>() { { 5, "5" }, { 10, "10" }, { 20, "20" }, { 0, "ALL" } };
                        pager.ShowPageSizes = true;
                        pager.PagesToDisplay = 3;
                        pager.CurrentPage = 2;
                        }
                      );
    }

    @grid
}